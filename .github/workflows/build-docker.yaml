name: Build and Push Docker

on:
  push:
    branches:
      - 'develop'

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.GCR_KEY }}
          project_id: ${{ secrets.PROJECT_ID }}
          export_default_credentials: true

      # Build docker image
      - name: Image
        run: |-
          docker build -t gcr.io/furkanthehuman/atolye:latest .
      # Configure docker to use the gcloud command-line tool as a credential helper
      - run: |
          gcloud auth configure-docker -q
      # Push image to Google Container Registry
      - name: Build
        run: |-
          docker push gcr.io/furkanthehuman/atolye:latest

      - name: KUBECONFIG
        run: |
          mkdir ~/.kube
          echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod 700 kubectl
          sudo cp kubectl /usr/local/bin
      - name: Create namespace
        run: kubectl create ns staging --dry-run=client -oyaml | kubectl apply -f -

      - name: Add secert  image pull secret
        run: kubectl create secret docker-registry gcr-json-key --docker-server=gcr.io --docker-username=_json_key  --docker-password='${{ secrets.GCR_KEY }}'  --docker-email=aksoyfurkan45@gmail.com --dry-run=client -o yaml | kubectl apply -n staging -f -

      - name: Deploy
        run: kubectl apply -n staging -f manifests/hello.yaml manifests/service.yaml manifests/ing-dev.yaml

      - name: Rollout new version
        run: kubectl rollout restart deployment/atolye -n staging

      - name: Set output
        id: vars
        run: echo ::set-output name=short_ref::${GITHUB_REF#refs/*/}

      - name: Send mail
        uses: dawidd6/action-send-mail@v3
        with:
          # Required mail server address:
          server_address: smtp.gmail.com
          # Required mail server port:
          server_port: 465
          # Optional (recommended): mail server username:
          username: ${{secrets.MAIL_USERNAME}}
          # Optional (recommended) mail server password:
          password: ${{secrets.MAIL_PASSWORD}}
          # Required mail subject:
          subject: Github Actions job result
          # Required recipients' addresses:
          to: aksoyfurkan45@gmail.com
          # Required sender full name (address can be skipped):
          from: Megatron <frkn781227@gmail.com>
          # Optional whether this connection use TLS ()
          secure: true
          # Optional plain body:
          body: |
            # From ${{github.repository}}
            Build job of ${{github.repository}} completed successfully!
            Merged to 'develop' branch and deployed to 'staging' namespace
          # Optional HTML body read from file:
          # Optional unsigned/invalid certificates allowance:
          ignore_cert: true
          # Optional converting Markdown to HTML (set content_type to text/html too):
          convert_markdown: true
          # Optional priority: 'high', 'normal' (default) or 'low'
          priority: low
